{"version":3,"sources":["logo.svg","components/Prompts.jsx","components/CreateGame.jsx","components/JoinGame.jsx","components/RejoinGame.jsx","components/SetupGame.jsx","components/Refresh.jsx","components/PromptDisplayer.jsx","components/YourTurn.jsx","components/Turn.jsx","components/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Prompts","props","promptInputs","prompts","map","prompt","i","type","value","onChange","newPrompt","prompt_index","e","newPrompts","target","setPrompts","handleUpdatePrompts","CreateGame","useState","userName","setUserName","gameName","setGameName","onSubmit","preventDefault","fetch","join","then","response","json","game","console","log","setUserTeam","find","user","setGame","JoinGame","RejoinGame","SetupGame","mode","setMode","onClick","Refresh","PromptDisplayer","remainingPrompts","setRemainingPrompts","undefined","currentPrompt","setCurrentPrompt","useEffect","firstPrompt","getNextPrompt","indexOf","newRemainingPrompts","JSON","parse","stringify","splice","currentRemainingPrompts","nextPrompt","speech_remaining","filter","word_remaining","charade_remaining","length","Math","floor","random","newTurnUpdate","turnUpdate","push","userTeam","setTurnUpdate","endTurn","YourTurn","timeRemaining","setTimeRemaining","game_over","final_score","method","headers","body","setTimeout","Turn","users","sort","a","b","current_turn_user_name","Game","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uKAAAA,EAAOC,QAAU,IAA0B,kC,4HCE5B,SAASC,EAAQC,GAC9B,IAMIC,EAAeD,EAAME,QAAQC,KAAI,SAACC,EAAQC,GAC5C,OACE,oCACE,6BACA,2BAAOC,KAAK,OAAOC,MAAOH,EAAQI,SAAU,SAACC,GAAD,OAVtB,SAACC,EAAcC,GACzC,IAAIC,EAAU,YAAOZ,EAAME,SAC3BU,EAAWF,GAAgBC,EAAEE,OAAON,MACpCP,EAAMc,WAAWF,GAO8CG,CAAoBV,EAAGI,UAKxF,OACE,oCACE,8DACKR,GAEL,8BCnBS,SAASe,EAAWhB,GAAQ,IAAD,EACRiB,mBAAS,IADD,mBACjCC,EADiC,KACvBC,EADuB,OAERF,mBAAS,IAFD,mBAEjCG,EAFiC,KAEvBC,EAFuB,OAGVJ,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KAHhB,mBAGjCf,EAHiC,KAGxBY,EAHwB,KA+BrBZ,EAAQC,KAAI,SAACC,EAAQC,GACtC,OACE,oCACE,6BACA,2BAAOC,KAAK,OAAOC,MAAOH,EAAQI,SAAU,SAACC,GAAD,OAVtB,SAACC,EAAcC,GACzC,IAAIC,EAAU,YAAOV,GACrBU,EAAWF,GAAgBC,EAAEE,OAAON,MACpCO,EAAWF,GAOoDG,CAAoBV,EAAGI,UAKxF,OACE,0BAAMa,SApCiB,SAACX,GACxBA,EAAEY,iBACFC,MAAM,0BAAD,OAA2BJ,EAA3B,sBAAiDF,EAAjD,oBAAqEhB,EAAQuB,KAAK,UACtFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,eAAgBF,GAC5B7B,EAAMmB,YAAYD,GAClBlB,EAAMgC,YAAYH,EAAI,MAAUI,MAAK,SAACC,GAAD,OAAUA,EAAI,YAAkBhB,KAAnD,MAClBlB,EAAMmC,QAAQN,QA6Bd,4CACE,2BAAOvB,KAAK,OAAOC,MAAOW,EAAUV,SA1Bb,SAACG,GAC5BQ,EAAYR,EAAEE,OAAON,WA2BnB,6BACA,4CACE,2BAAOD,KAAK,OAAOC,MAAOa,EAAUZ,SA1Bb,SAACG,GAC5BU,EAAYV,EAAEE,OAAON,WA2BnB,6BACA,kBAACR,EAAD,CAASG,QAASA,EAASY,WAAYA,IACvC,6BACA,2BAAOR,KAAK,SAASC,MAAM,YCpDlB,SAAS6B,EAASpC,GAAQ,IAAD,EACRiB,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KADlB,mBAC/Bf,EAD+B,KACtBY,EADsB,OAENG,mBAAS,IAFH,mBAE/BG,EAF+B,KAErBC,EAFqB,OAGNJ,mBAAS,IAHH,mBAG/BC,EAH+B,KAGrBC,EAHqB,KAyBtC,OACE,0BAAMG,SArBe,SAACX,GACtBA,EAAEY,iBACFC,MAAM,wBAAD,OAAyBJ,EAAzB,sBAA+CF,EAA/C,oBAAmEhB,EAAQuB,KAAK,UACpFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,cAAeF,GAC3B7B,EAAMmB,YAAYD,GAClBlB,EAAMgC,YAAYH,EAAI,MAAUI,MAAK,SAACC,GAAD,OAAUA,EAAI,YAAkBhB,KAAnD,MAClBlB,EAAMmC,QAAQN,QAcd,4CACE,2BAAOvB,KAAK,OAAOC,MAAOa,EAAUZ,SAXb,SAACG,GAC5BU,EAAYV,EAAEE,OAAON,WAYnB,6BACA,4CACE,2BAAOD,KAAK,OAAOC,MAAOW,EAAUV,SAXb,SAACG,GAC5BQ,EAAYR,EAAEE,OAAON,WAYnB,6BACA,kBAACR,EAAD,CAASG,QAASA,EAASY,WAAYA,IACvC,2BAAOR,KAAK,SAASC,MAAM,YCtClB,SAAS8B,EAAWrC,GAAQ,IAAD,EACRiB,mBAAS,IADD,mBACjCG,EADiC,KACvBC,EADuB,OAERJ,mBAAS,IAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,KAwBxC,OACE,0BAAMG,SArBiB,SAACX,GACxBA,EAAEY,iBACFC,MAAM,0BAAD,OAA2BJ,EAA3B,sBAAiDF,IACrDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,gBAAiBF,GAC7B7B,EAAMmB,YAAYD,GAClBlB,EAAMgC,YAAYH,EAAI,MAAUI,MAAK,SAACC,GAAD,OAAUA,EAAI,YAAkBhB,KAAnD,MAClBlB,EAAMmC,QAAQN,QAcd,4CACE,2BAAOvB,KAAK,OAAOC,MAAOa,EAAUZ,SAXb,SAACG,GAC5BU,EAAYV,EAAEE,OAAON,WAYnB,6BACA,4CACE,2BAAOD,KAAK,OAAOC,MAAOW,EAAUV,SAXb,SAACG,GAC5BQ,EAAYR,EAAEE,OAAON,WAYnB,6BACA,2BAAOD,KAAK,SAASC,MAAM,YC9BlB,SAAS+B,EAAUtC,GAAQ,IAAD,EACfiB,mBAAS,QADM,mBAChCsB,EADgC,KAC1BC,EAD0B,KAGvC,MAAa,SAATD,EAEA,oCACE,4BAAQE,QAAS,kBAAMD,EAAQ,YAA/B,eACA,mCACA,4BAAQC,QAAS,kBAAMD,EAAQ,UAA/B,aACA,mCACA,4BAAQC,QAAS,kBAAMD,EAAQ,YAA/B,gBAGc,WAATD,EACF,kBAACvB,EAAD,CAAYmB,QAASnC,EAAMmC,QAAShB,YAAanB,EAAMmB,YAAaa,YAAahC,EAAMgC,cAC5E,SAATO,EACF,kBAACH,EAAD,CAAUD,QAASnC,EAAMmC,QAAShB,YAAanB,EAAMmB,YAAaa,YAAahC,EAAMgC,cAC1E,WAATO,EACF,kBAACF,EAAD,CAAYF,QAASnC,EAAMmC,QAAShB,YAAanB,EAAMmB,YAAaa,YAAahC,EAAMgC,mBADzF,ECrBM,SAASU,EAAQ1C,GAU9B,OACE,4BAAQyC,QAVY,WACpBjB,MAAM,2BAAD,OAA4BxB,EAAMoB,WACtCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,kBAAmBF,GAC/B7B,EAAMmC,QAAQN,QAKhB,WCXW,SAASc,EAAgB3C,GAAQ,IAAD,EAEGiB,mBAASjB,EAAM6B,KAAN,SAFZ,mBAEtCe,EAFsC,KAEpBC,EAFoB,OAGH5B,wBAAS6B,GAHN,mBAGtCC,EAHsC,KAGvBC,EAHuB,KAK7CC,qBAAU,WACR,IAAIC,EAAcC,EAAcP,GAChCI,EAAiBE,GACjB,IAAI7C,EAAIuC,EAAiBQ,QAAQF,GAC7BG,EAAsBC,KAAKC,MAAMD,KAAKE,UAAUZ,IACpDS,EAAoBI,OAAOpD,EAAG,GAC9BwC,EAAoBQ,KACnB,IAEH,IAAMF,EAAgB,SAACO,GACrB,IAIIC,EAJAC,EAAmBF,EAAwBG,QAAO,SAAAzD,GAAM,MAA6B,WAAzBA,EAAM,cAClE0D,EAAiBJ,EAAwBG,QAAO,SAAAzD,GAAM,MAA6B,SAAzBA,EAAM,cAChE2D,EAAoBL,EAAwBG,QAAO,SAAAzD,GAAM,MAA6B,YAAzBA,EAAM,cAGvE,GAAgC,IAA5BwD,EAAiBI,OACnBL,EAAaC,EAAiBK,KAAKC,MAAMD,KAAKE,SAAWP,EAAiBI,cACrE,GAA8B,IAA1BF,EAAeE,OACxBL,EAAaG,EAAeG,KAAKC,MAAMD,KAAKE,SAAWL,EAAeE,aACjE,IAAiC,IAA7BD,EAAkBC,OAG3B,OAAO,KAFPL,EAAaI,EAAkBE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAkBC,SAI9E,OAAOL,GAyBT,OAFA7B,QAAQC,IAAI,aAAca,GAGxB,yCACuBE,IAAlBC,GAAiD,OAAlBA,EAChC,oCAEoC,WAAhCA,EAAa,WACb,+DACE,KAG8B,SAAhCA,EAAa,WACb,uEACE,KAG8B,YAAhCA,EAAa,WACb,4DACE,KAEJ,2BAAIA,EAAa,QACjB,4BAAQN,QA1CI,WAClB,IAAI2B,EAAgBd,KAAKC,MAAMD,KAAKE,UAAUxD,EAAMqE,aACpDD,EAAa,kBAAsBE,KAAKvB,GACxCqB,EAAc,GAAD,OAAIpE,EAAMuE,SAAV,YAA+B,EAC5CvE,EAAMwE,cAAcJ,GAEpB,IAAIT,EAAaR,EAAcP,GAEZ,OAAfe,IACF7B,QAAQC,IAAI,aACZ/B,EAAMyE,SAAQ,IAGhB,IAAIpE,EAAIuC,EAAiBQ,QAAQO,GAC7BN,EAAsBC,KAAKC,MAAMD,KAAKE,UAAUZ,IACpDS,EAAoBI,OAAOpD,EAAG,GAC9BwC,EAAoBQ,GACpBL,EAAiBW,KAyBX,YAGF,uCCzEO,SAASe,EAAS1E,GAAQ,IAAD,EACIiB,wBAAS6B,GADb,mBAC/B6B,EAD+B,KAChBC,EADgB,OAEF3D,mBAAS,CAC3C,UAAajB,EAAM6B,KAAN,eACb,WAAc7B,EAAM6B,KAAN,gBACd,kBAAqB,GACrB,MAAS7B,EAAM6B,KAAN,UAA6B,GAAK7B,EAAM6B,KAAN,MAAoBmC,OAC/D,UAAahE,EAAM6B,KAAN,iBAPuB,mBAE/BwC,EAF+B,KAEnBG,EAFmB,KAUhCC,EAAU,WAAsB,IAArBI,EAAoB,wDACnC,GAAKA,EAcE,CACL/C,QAAQC,IAAI,eACZ,IAAI+C,EAAc,CAChB,UAAaT,EAAU,UACvB,WAAcA,EAAU,YAE1BS,EAAY,GAAD,OAAI9E,EAAMuE,SAAV,WAA8BO,EAAY,GAAD,OAAI9E,EAAMuE,SAAV,WAA8B,EAClF/C,MAAM,uBAAD,OAAwB6C,EAAU,WAAiB,CACtDU,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM3B,KAAKE,UAAUsB,KAEtBpD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ7B,EAAMmC,QAAQN,WA9BhBC,QAAQC,IAAI,cAAesC,GAC3B7C,MAAM,uBAAD,OAAwB6C,EAAU,WAAiB,CACtDU,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM3B,KAAKE,UAAUa,KAEtB3C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ7B,EAAMmC,QAAQN,OAuCpB,OAfAoB,qBAAU,WACR0B,EAAgB,GAAKO,YAAW,kBAAMN,EAAiBD,EAAgB,KAAI,KACrD,IAAlBA,EACFF,IApDW,KAqDFE,GACTH,EAAc,CACZ,UAAaxE,EAAM6B,KAAN,eACb,WAAc7B,EAAM6B,KAAN,gBACd,kBAAqB,GACrB,MAAS7B,EAAM6B,KAAN,UAA6B,GAAK7B,EAAM6B,KAAN,MAAoBmC,OAC/D,UAAahE,EAAM6B,KAAN,mBAGhB,CAAC8C,SAEkB7B,IAAlB6B,EACI,4BAAQlC,QAAS,kBAAMmC,EAjEhB,MAiEP,SACqB,IAAlBD,EACF,yCAGL,oCACE,8CAAoBA,GACpB,kBAAChC,EAAD,CACEd,KAAM7B,EAAM6B,KACZwC,WAAYA,EACZG,cAAeA,EACfC,QAASA,EACTF,SAAUvE,EAAMuE,YC7EX,SAASY,EAAKnF,GAC3B,IAAIoF,EAAK,YAAOpF,EAAM6B,KAAN,OAChBuD,EAAMC,MAAK,SAASC,EAAGC,GACrB,OAAOD,EAAC,GAASC,EAAC,MAEpB,IAAIC,EAAyBJ,EAAMpF,EAAM6B,KAAN,WAAN,UAE7B,OAAI2D,IAA2BxF,EAAMkB,SAC5B,kBAACwD,EAAD,CAAU7C,KAAM7B,EAAM6B,KAAMM,QAASnC,EAAMmC,QAASoC,SAAUvE,EAAMuE,WAErE,QAAN,OAAeiB,EAAf,WCRW,SAASC,EAAKzF,GAAQ,IAAD,EACViB,wBAAS6B,GADC,mBAC3BjB,EAD2B,KACrBM,EADqB,OAEFlB,wBAAS6B,GAFP,mBAE3B5B,EAF2B,KAEjBC,EAFiB,OAGFF,wBAAS6B,GAHP,mBAG3ByB,EAH2B,KAGjBvC,EAHiB,KAKlC,YAAac,IAATjB,EACK,kBAACS,EAAD,CAAWH,QAASA,EAAShB,YAAaA,EAAaa,YAAaA,IAGzE,oCACE,yDAA+Bd,EAA/B,KACA,yCAAeW,EAAI,KAAJ,WACf,6CAAmB0C,EAAnB,SACA,wCAAc1C,EAAI,KAAJ,UAAd,MACCA,EAAI,MAAUgC,QAAO,SAAC3B,GAAD,MAA2B,QAAjBA,EAAI,QAAoB/B,KAAI,SAAC+B,GAAD,OAAU,2BAAIA,EAAI,cAC9E,yCAAeL,EAAI,KAAJ,WAAf,MACCA,EAAI,MAAUgC,QAAO,SAAC3B,GAAD,MAA2B,SAAjBA,EAAI,QAAqB/B,KAAI,SAAC+B,GAAD,OAAU,2BAAIA,EAAI,cAC/E,wCAAcL,EAAI,QAAYmC,OAA9B,iBACA,kBAACtB,EAAD,CAAStB,SAAUS,EAAI,KAAJ,UAA2BM,QAASA,IAEnDN,EAAI,KAAJ,UAKF,oCACE,yCACA,2CACA,kCAAQA,EAAI,KAAJ,UAAR,MAAsCA,EAAI,KAAJ,WAAtC,UAPF,oCACE,kBAACsD,EAAD,CAAMtD,KAAMA,EAAMX,SAAUA,EAAUqD,SAAUA,EAAUpC,QAASA,MCdhEuD,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACF,EAAD,QCGcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9E,QAAQ8E,MAAMA,EAAMC,c","file":"static/js/main.18674c48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nexport default function Prompts(props) {\n  const handleUpdatePrompts = (prompt_index, e) => {\n    let newPrompts = [...props.prompts]\n    newPrompts[prompt_index] = e.target.value\n    props.setPrompts(newPrompts)\n  }\n\n  var promptInputs = props.prompts.map((prompt, i) => {\n    return (\n      <>\n        <br/>\n        <input type=\"text\" value={prompt} onChange={(newPrompt) => handleUpdatePrompts(i, newPrompt)} />\n      </>\n    )\n  })\n\n  return (\n    <>\n      <label>Please provide some prompts:\n          {promptInputs}\n      </label>\n      <br/>\n    </>\n  )\n}","import React, { useState } from 'react';\n\nimport Prompts from './Prompts';\n\nexport default function CreateGame(props) {\n  const [userName, setUserName] = useState(\"\")\n  const [gameName, setGameName] = useState(\"\")\n  const [prompts, setPrompts] = useState([\"\", \"\", \"\", \"\", \"\"])\n\n  const handleCreateGame = (e) => {\n    e.preventDefault()\n    fetch(`/create-game?game_name=${gameName}&user_name=${userName}&prompts=${prompts.join(\"£\")}`)\n    .then(response => response.json())\n    .then(game => {\n      console.log(\"created game\", game)\n      props.setUserName(userName)\n      props.setUserTeam(game[\"users\"].find((user) => user[\"user_name\"] === userName)[\"team\"])\n      props.setGame(game)\n    });\n  }\n\n  const handleChangeUserName = (e) => {\n    setUserName(e.target.value);\n  }\n\n  const handleChangeGameName = (e) => {\n    setGameName(e.target.value);\n  }\n\n  const handleUpdatePrompts = (prompt_index, e) => {\n    let newPrompts = [...prompts]\n    newPrompts[prompt_index] = e.target.value\n    setPrompts(newPrompts)\n  }\n\n  var promptInputs = prompts.map((prompt, i) => {\n    return (\n      <>\n        <br/>\n        <input type=\"text\" value={prompt} onChange={(newPrompt) => handleUpdatePrompts(i, newPrompt)} />\n      </>\n    )\n  })\n\n  return (\n    <form onSubmit={handleCreateGame}>\n      <label>User name:\n        <input type=\"text\" value={userName} onChange={handleChangeUserName} />\n      </label>\n      <br/>\n      <label>Game name:\n        <input type=\"text\" value={gameName} onChange={handleChangeGameName} />\n      </label>\n      <br/>\n      <Prompts prompts={prompts} setPrompts={setPrompts} />\n      <br/>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  )\n}","import React, { useState } from 'react';\n\nimport Prompts from './Prompts';\n\nexport default function JoinGame(props) {\n  const [prompts, setPrompts] = useState([\"\", \"\", \"\", \"\", \"\"])\n  const [gameName, setGameName] = useState(\"\")\n  const [userName, setUserName] = useState(\"\")\n\n  const handleJoinGame = (e) => {\n    e.preventDefault()\n    fetch(`/join-game?game_name=${gameName}&user_name=${userName}&prompts=${prompts.join(\"£\")}`)\n    .then(response => response.json())\n    .then(game => {\n      console.log(\"joined game\", game)\n      props.setUserName(userName)\n      props.setUserTeam(game[\"users\"].find((user) => user[\"user_name\"] === userName)[\"team\"])\n      props.setGame(game)\n    });\n  }\n\n  const handleChangeGameName = (e) => {\n    setGameName(e.target.value);\n  }\n\n  const handleChangeUserName = (e) => {\n    setUserName(e.target.value);\n  }\n\n  return(\n    <form onSubmit={handleJoinGame}>\n      <label>Game name:\n        <input type=\"text\" value={gameName} onChange={handleChangeGameName} />\n      </label>\n      <br/>\n      <label>User name:\n        <input type=\"text\" value={userName} onChange={handleChangeUserName} />\n      </label>\n      <br/>\n      <Prompts prompts={prompts} setPrompts={setPrompts} />\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  )\n}","import React, { useState } from 'react';\n\nexport default function RejoinGame(props) {\n  const [gameName, setGameName] = useState(\"\")\n  const [userName, setUserName] = useState(\"\")\n\n  const handleRejoinGame = (e) => {\n    e.preventDefault()\n    fetch(`/rejoin-game?game_name=${gameName}&user_name=${userName}`)\n    .then(response => response.json())\n    .then(game => {\n      console.log(\"rejoined game\", game)\n      props.setUserName(userName)\n      props.setUserTeam(game[\"users\"].find((user) => user[\"user_name\"] === userName)[\"team\"])\n      props.setGame(game)\n    });\n  }\n\n  const handleChangeGameName = (e) => {\n    setGameName(e.target.value);\n  }\n\n  const handleChangeUserName = (e) => {\n    setUserName(e.target.value);\n  }\n\n  return(\n    <form onSubmit={handleRejoinGame}>\n      <label>Game name:\n        <input type=\"text\" value={gameName} onChange={handleChangeGameName} />\n      </label>\n      <br/>\n      <label>User name:\n        <input type=\"text\" value={userName} onChange={handleChangeUserName} />\n      </label>\n      <br/>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  )\n}","import React, { useState } from 'react';\n\nimport CreateGame from './CreateGame';\nimport JoinGame from './JoinGame';\nimport RejoinGame from './RejoinGame';\n\nexport default function SetupGame(props) {\n  const [mode, setMode] = useState(\"none\")\n\n  if (mode === \"none\") {\n    return(\n      <>\n        <button onClick={() => setMode(\"create\")}>Create Game</button>\n        <p> or </p>\n        <button onClick={() => setMode(\"join\")}>Join Game</button>\n        <p> or </p>\n        <button onClick={() => setMode(\"rejoin\")}>Rejoin Game</button>\n      </>\n    )\n  } else if (mode === \"create\") {\n    return <CreateGame setGame={props.setGame} setUserName={props.setUserName} setUserTeam={props.setUserTeam}/>\n  } else if (mode === \"join\") {\n    return <JoinGame setGame={props.setGame} setUserName={props.setUserName} setUserTeam={props.setUserTeam}/>\n  } else if (mode === \"rejoin\") {\n    return <RejoinGame setGame={props.setGame} setUserName={props.setUserName} setUserTeam={props.setUserTeam}/>\n  }\n}","import React from 'react';\n\nexport default function Refresh(props) {\n  const handleRefresh = () => {\n    fetch(`/refresh-game?game_name=${props.gameName}`)\n    .then(response => response.json())\n    .then(game => {\n      console.log(\"refreshed game:\", game)\n      props.setGame(game)\n    });\n  }\n\n  return (\n    <button onClick={handleRefresh}>Refresh</button>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nexport default function PromptDisplayer(props) {\n  \n  const [remainingPrompts, setRemainingPrompts] = useState(props.game[\"prompts\"])\n  const [currentPrompt, setCurrentPrompt] = useState(undefined)\n  \n  useEffect(() => {\n    let firstPrompt = getNextPrompt(remainingPrompts)\n    setCurrentPrompt(firstPrompt)\n    let i = remainingPrompts.indexOf(firstPrompt)\n    let newRemainingPrompts = JSON.parse(JSON.stringify(remainingPrompts))\n    newRemainingPrompts.splice(i, 1)\n    setRemainingPrompts(newRemainingPrompts)\n  }, [])\n\n  const getNextPrompt = (currentRemainingPrompts) => {\n    let speech_remaining = currentRemainingPrompts.filter(prompt => prompt[\"game_round\"] === \"speech\")\n    let word_remaining = currentRemainingPrompts.filter(prompt => prompt[\"game_round\"] === \"word\")\n    let charade_remaining = currentRemainingPrompts.filter(prompt => prompt[\"game_round\"] === \"charade\")\n  \n    let nextPrompt\n    if (speech_remaining.length !== 0) {\n      nextPrompt = speech_remaining[Math.floor(Math.random() * speech_remaining.length)]\n    } else if (word_remaining.length !== 0) {\n      nextPrompt = word_remaining[Math.floor(Math.random() * word_remaining.length)]\n    } else if (charade_remaining.length !== 0) {\n      nextPrompt = charade_remaining[Math.floor(Math.random() * charade_remaining.length)]\n    } else {\n      return null\n    }\n    return nextPrompt\n  }\n  \n  const handleGotIt = () => {\n    let newTurnUpdate = JSON.parse(JSON.stringify(props.turnUpdate))\n    newTurnUpdate[\"prompts_to_delete\"].push(currentPrompt)\n    newTurnUpdate[`${props.userTeam}_score`] += 1\n    props.setTurnUpdate(newTurnUpdate)\n    \n    let nextPrompt = getNextPrompt(remainingPrompts)\n    \n    if (nextPrompt === null) {\n      console.log(\"GAME OVER\")\n      props.endTurn(true)\n    }\n    \n    let i = remainingPrompts.indexOf(nextPrompt);\n    let newRemainingPrompts = JSON.parse(JSON.stringify(remainingPrompts))\n    newRemainingPrompts.splice(i, 1)\n    setRemainingPrompts(newRemainingPrompts)\n    setCurrentPrompt(nextPrompt)\n  }\n\n  console.log(\"remaining:\", remainingPrompts)\n\n  return (\n    <>\n      { (currentPrompt !== undefined && currentPrompt !== null) ?\n        <>\n          {\n            currentPrompt[\"game_round\"] === \"speech\" ?\n            <p>Use words to describe the prompt</p>\n            : null\n          }\n          {\n            currentPrompt[\"game_round\"] === \"word\" ?\n            <p>Use a single word to describe the prompt</p>\n            : null\n          }\n          {\n            currentPrompt[\"game_round\"] === \"charade\" ?\n            <p>Act our the prompt in silence</p>\n            : null\n          }\n          <p>{currentPrompt[\"prompt\"]}</p>\n          <button onClick={handleGotIt}>Got it!</button>\n        </>\n        :\n        <p>Loading</p>\n      }\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react';\n\nimport PromptDisplayer from './PromptDisplayer';\n\nconst turnTime = 60\n\nexport default function YourTurn(props) {\n  const [timeRemaining, setTimeRemaining] = useState(undefined)\n  const [turnUpdate, setTurnUpdate] = useState({\n    \"red_score\": props.game[\"game\"][\"red_score\"],\n    \"blue_score\": props.game[\"game\"][\"blue_score\"],\n    \"prompts_to_delete\": [],\n    \"turn\": (props.game[\"game\"][\"turn\"] + 1) % props.game[\"users\"].length,\n    \"game_name\": props.game[\"game\"][\"game_name\"]\n  })\n\n  const endTurn = (game_over=false) => {\n    if (!game_over) {\n      console.log(\"ending turn\", turnUpdate)\n      fetch(`/end-turn?game_name=${turnUpdate[\"game_name\"]}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(turnUpdate)\n      })\n      .then(response => response.json())\n      .then(game => {\n        console.log(game)\n        props.setGame(game)\n      });\n    } else {\n      console.log(\"ending game\")\n      let final_score = {\n        \"red_score\": turnUpdate[\"red_score\"],\n        \"blue_score\": turnUpdate[\"blue_score\"],\n      }\n      final_score[`${props.userTeam}_score`] = final_score[`${props.userTeam}_score`] + 1\n      fetch(`/end-game?game_name=${turnUpdate[\"game_name\"]}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(final_score)\n      })\n      .then(response => response.json())\n      .then(game => {\n        console.log(game)\n        props.setGame(game)\n      });\n    }\n  }\n\n  useEffect(() => {\n    timeRemaining > 0 && setTimeout(() => setTimeRemaining(timeRemaining - 1), 1000);\n    if (timeRemaining === 0) {\n      endTurn()\n    } else if (timeRemaining === turnTime) {\n      setTurnUpdate({\n        \"red_score\": props.game[\"game\"][\"red_score\"],\n        \"blue_score\": props.game[\"game\"][\"blue_score\"],\n        \"prompts_to_delete\": [],\n        \"turn\": (props.game[\"game\"][\"turn\"] + 1) % props.game[\"users\"].length,\n        \"game_name\": props.game[\"game\"][\"game_name\"]\n      })\n    }\n  }, [timeRemaining])\n\n  if (timeRemaining === undefined) {\n   return <button onClick={() => setTimeRemaining(turnTime)}>Start</button>\n  } else if (timeRemaining === 0) {\n    return <p>Time's up!</p>\n  } else {\n    return (\n      <>\n        <p>Time remaining: {timeRemaining}</p>\n        <PromptDisplayer\n          game={props.game}\n          turnUpdate={turnUpdate}\n          setTurnUpdate={setTurnUpdate}\n          endTurn={endTurn}\n          userTeam={props.userTeam}\n        />\n      </>\n    )\n  }\n}\n","import React from 'react';\n\nimport YourTurn from './YourTurn';\n\nexport default function Turn(props) {\n  let users = [...props.game[\"users\"]]\n  users.sort(function(a, b) {\n    return a[\"id\"] - b[\"id\"]\n  });\n  let current_turn_user_name = users[props.game[\"game\"][\"turn\"]][\"user_name\"]\n\n  if (current_turn_user_name === props.userName) {\n    return <YourTurn game={props.game} setGame={props.setGame} userTeam={props.userTeam}/>\n  } else {\n    return `It's ${current_turn_user_name}'s turn`\n  }\n}\n","import React, { useState } from 'react';\n\nimport SetupGame from './SetupGame';\nimport Refresh from './Refresh';\nimport Turn from './Turn';\n\nexport default function Game(props) {\n  const [game, setGame] = useState(undefined)\n  const [userName, setUserName] = useState(undefined)\n  const [userTeam, setUserTeam] = useState(undefined)\n\n  if (game === undefined) {\n    return <SetupGame setGame={setGame} setUserName={setUserName} setUserTeam={setUserTeam}/>\n  } else {\n    return(\n      <>\n        <p>Welcome to Charade Cascade {userName}!</p>\n        <p>Game name: {game[\"game\"][\"game_name\"]}</p>\n        <p>You are on the {userTeam} team</p>\n        <p>Red Team ({game[\"game\"][\"red_score\"]}):</p>\n        {game[\"users\"].filter((user) => user[\"team\"] === \"red\").map((user) => <p>{user[\"user_name\"]}</p>)}\n        <p>Blue Team ({game[\"game\"][\"blue_score\"]}):</p>\n        {game[\"users\"].filter((user) => user[\"team\"] === \"blue\").map((user) => <p>{user[\"user_name\"]}</p>)}\n        <p>There are {game[\"prompts\"].length} prompts left</p>\n        <Refresh gameName={game[\"game\"][\"game_name\"]} setGame={setGame}/>\n        {\n          (!game[\"game\"][\"game_over\"]) ?\n          <>\n            <Turn game={game} userName={userName} userTeam={userTeam} setGame={setGame} />\n          </>\n          : \n          <>\n            <p>Game Over!</p>\n            <p>Final scores</p>\n            <p>Red {game[\"game\"][\"red_score\"]} - {game[\"game\"][\"blue_score\"]} Blue</p>\n          </>\n        }\n      </>\n    )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}